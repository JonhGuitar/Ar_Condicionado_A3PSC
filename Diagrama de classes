
@startuml

class Pessoa {
  -nome: String
  -anoNascimento: Int
  -cpf: String
  +construtor()
  +getters_e_setters()
  +to_string()
}

class Cliente {
  -telefone: Int
  +construtor()
  +getters_e_setters()
  +to_string()
  +realizar_agendamento()
  +avaliar_Agendamento()
}

class Funcionario {
  -matricula: Int
  +construtor()
  +getters_e_setters()
  +to_string()
  +atualizar_status_agendamento()
  +cadastrar_servico()
  +cadastrar_equipamento()
  
}

class Servico {
  -tipo: String
  -valor : Double
  +construtor()
  +getters_e_setters()
  +to_string()
}


class Agendamento {
  -data: Int
  -hora: Int
  +construtor()
  +getters_e_setters()
  +to_string()
}

class Endereco {
  -rua: String;
  -numero: String;
  -bairro: String;
  -cidade: String;
  -cep: String;
  +construtor()
  +getters_e_setters()
  +to_string()
}


class Avaliacao {
  -nota: Int
  -comentario: String
  -cliente: Cliente
  -servico: Servico
  +construtor()
  +getters_e_setters()
  +to_string()
}

class Categoria {
  -urgencia: String
  -localizacao: String
  +construtor()
  +getters_e_setters()
  +to_string()
}

class Equipamento {
  -marca : String
  -modelo: String
  +construtor()
  +getters_e_setters()
  +to_string()
  
}

class Pagamento {
  -metodo_Pagamento : String
  -valorPago : Double
  +construtor()
  +getters_e_setters()
  +to_string()
  +validarPagamento()
  
}

Cliente -up-|> Pessoa
Funcionario -up-|> Pessoa
Agendamento --> Cliente
Avaliacao --> Cliente
Avaliacao --> Agendamento
Agendamento <--o Servico
Servico <--o Categoria
Funcionario o--> Agendamento
Funcionario o--> Equipamento
Funcionario o--> Servico
Servico <--o Equipamento
Pagamento o--> Agendamento
Pagamento o--> Cliente
Agendamento o--> Endereco

@enduml
